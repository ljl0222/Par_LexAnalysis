***********************************************Action***********************************************
0   0   int   shift   3
1   0   void   shift   4
2   1   #   acc   0
3   2   ID   shift   5
4   3   ID   reduct   2
5   4   ID   reduct   3
6   5   (   shift   6
7   6   )   shift   7
8   7   {   shift   9
9   8   #   reduct   1
10   9   ID   reduct   5
11   9   if   reduct   5
12   9   int   shift   12
13   9   return   reduct   5
14   9   while   reduct   5
15   10   ID   shift   19
16   10   if   shift   22
17   10   return   shift   20
18   10   while   shift   21
19   11   ;   shift   23
20   12   ID   shift   24
21   13   }   shift   25
22   14   ID   shift   19
23   14   if   shift   22
24   14   return   shift   20
25   14   while   shift   21
26   14   }   reduct   8
27   15   ID   reduct   10
28   15   if   reduct   10
29   15   return   reduct   10
30   15   while   reduct   10
31   15   }   reduct   10
32   16   ID   reduct   11
33   16   if   reduct   11
34   16   return   reduct   11
35   16   while   reduct   11
36   16   }   reduct   11
37   17   ID   reduct   12
38   17   if   reduct   12
39   17   return   reduct   12
40   17   while   reduct   12
41   17   }   reduct   12
42   18   ID   reduct   13
43   18   if   reduct   13
44   18   return   reduct   13
45   18   while   reduct   13
46   18   }   reduct   13
47   19   =   shift   27
48   20   (   shift   35
49   20   ;   shift   28
50   20   ID   shift   34
51   20   num   shift   33
52   21   (   shift   36
53   22   (   shift   37
54   23   ID   reduct   5
55   23   if   reduct   5
56   23   int   shift   12
57   23   return   reduct   5
58   23   while   reduct   5
59   24   ;   reduct   7
60   25   #   reduct   4
61   26   }   reduct   9
62   27   (   shift   35
63   27   ID   shift   34
64   27   num   shift   33
65   28   ID   reduct   15
66   28   if   reduct   15
67   28   return   reduct   15
68   28   while   reduct   15
69   28   }   reduct   15
70   29   ;   shift   40
71   30   !=   shift   46
72   30   ;   reduct   20
73   30   <   shift   43
74   30   <=   shift   44
75   30   ==   shift   45
76   30   >   shift   41
77   30   >=   shift   42
78   31   !=   reduct   27
79   31   +   shift   47
80   31   -   shift   48
81   31   ;   reduct   27
82   31   <   reduct   27
83   31   <=   reduct   27
84   31   ==   reduct   27
85   31   >   reduct   27
86   31   >=   reduct   27
87   32   !=   reduct   30
88   32   *   shift   49
89   32   +   reduct   30
90   32   -   reduct   30
91   32   /   shift   50
92   32   ;   reduct   30
93   32   <   reduct   30
94   32   <=   reduct   30
95   32   ==   reduct   30
96   32   >   reduct   30
97   32   >=   reduct   30
98   33   !=   reduct   33
99   33   *   reduct   33
100   33   +   reduct   33
101   33   -   reduct   33
102   33   /   reduct   33
103   33   ;   reduct   33
104   33   <   reduct   33
105   33   <=   reduct   33
106   33   ==   reduct   33
107   33   >   reduct   33
108   33   >=   reduct   33
109   34   !=   reduct   34
110   34   *   reduct   34
111   34   +   reduct   34
112   34   -   reduct   34
113   34   /   reduct   34
114   34   ;   reduct   34
115   34   <   reduct   34
116   34   <=   reduct   34
117   34   ==   reduct   34
118   34   >   reduct   34
119   34   >=   reduct   34
120   35   (   shift   56
121   35   ID   shift   55
122   35   num   shift   54
123   36   (   shift   56
124   36   ID   shift   55
125   36   num   shift   54
126   37   (   shift   56
127   37   ID   shift   55
128   37   num   shift   54
129   38   ID   reduct   6
130   38   if   reduct   6
131   38   return   reduct   6
132   38   while   reduct   6
133   39   ;   shift   60
134   40   ID   reduct   16
135   40   if   reduct   16
136   40   return   reduct   16
137   40   while   reduct   16
138   40   }   reduct   16
139   41   (   shift   66
140   41   ID   shift   65
141   41   num   shift   64
142   42   (   shift   66
143   42   ID   shift   65
144   42   num   shift   64
145   43   (   shift   66
146   43   ID   shift   65
147   43   num   shift   64
148   44   (   shift   66
149   44   ID   shift   65
150   44   num   shift   64
151   45   (   shift   66
152   45   ID   shift   65
153   45   num   shift   64
154   46   (   shift   66
155   46   ID   shift   65
156   46   num   shift   64
157   47   (   shift   35
158   47   ID   shift   34
159   47   num   shift   33
160   48   (   shift   35
161   48   ID   shift   34
162   48   num   shift   33
163   49   (   shift   35
164   49   ID   shift   34
165   49   num   shift   33
166   50   (   shift   35
167   50   ID   shift   34
168   50   num   shift   33
169   51   !=   shift   81
170   51   )   reduct   20
171   51   <   shift   78
172   51   <=   shift   79
173   51   ==   shift   80
174   51   >   shift   76
175   51   >=   shift   77
176   52   !=   reduct   27
177   52   )   reduct   27
178   52   +   shift   82
179   52   -   shift   83
180   52   <   reduct   27
181   52   <=   reduct   27
182   52   ==   reduct   27
183   52   >   reduct   27
184   52   >=   reduct   27
185   53   !=   reduct   30
186   53   )   reduct   30
187   53   *   shift   84
188   53   +   reduct   30
189   53   -   reduct   30
190   53   /   shift   85
191   53   <   reduct   30
192   53   <=   reduct   30
193   53   ==   reduct   30
194   53   >   reduct   30
195   53   >=   reduct   30
196   54   !=   reduct   33
197   54   )   reduct   33
198   54   *   reduct   33
199   54   +   reduct   33
200   54   -   reduct   33
201   54   /   reduct   33
202   54   <   reduct   33
203   54   <=   reduct   33
204   54   ==   reduct   33
205   54   >   reduct   33
206   54   >=   reduct   33
207   55   !=   reduct   34
208   55   )   reduct   34
209   55   *   reduct   34
210   55   +   reduct   34
211   55   -   reduct   34
212   55   /   reduct   34
213   55   <   reduct   34
214   55   <=   reduct   34
215   55   ==   reduct   34
216   55   >   reduct   34
217   55   >=   reduct   34
218   56   (   shift   56
219   56   ID   shift   55
220   56   num   shift   54
221   57   )   shift   87
222   58   )   shift   88
223   59   )   shift   89
224   60   ID   reduct   14
225   60   if   reduct   14
226   60   return   reduct   14
227   60   while   reduct   14
228   60   }   reduct   14
229   61   ;   reduct   21
230   62   +   shift   90
231   62   -   shift   91
232   62   ;   reduct   27
233   63   *   shift   92
234   63   +   reduct   30
235   63   -   reduct   30
236   63   /   shift   93
237   63   ;   reduct   30
238   64   *   reduct   33
239   64   +   reduct   33
240   64   -   reduct   33
241   64   /   reduct   33
242   64   ;   reduct   33
243   65   *   reduct   34
244   65   +   reduct   34
245   65   -   reduct   34
246   65   /   reduct   34
247   65   ;   reduct   34
248   66   (   shift   56
249   66   ID   shift   55
250   66   num   shift   54
251   67   ;   reduct   22
252   68   ;   reduct   23
253   69   ;   reduct   24
254   70   ;   reduct   25
255   71   ;   reduct   26
256   72   !=   reduct   28
257   72   ;   reduct   28
258   72   <   reduct   28
259   72   <=   reduct   28
260   72   ==   reduct   28
261   72   >   reduct   28
262   72   >=   reduct   28
263   73   !=   reduct   29
264   73   ;   reduct   29
265   73   <   reduct   29
266   73   <=   reduct   29
267   73   ==   reduct   29
268   73   >   reduct   29
269   73   >=   reduct   29
270   74   !=   reduct   31
271   74   +   reduct   31
272   74   -   reduct   31
273   74   ;   reduct   31
274   74   <   reduct   31
275   74   <=   reduct   31
276   74   ==   reduct   31
277   74   >   reduct   31
278   74   >=   reduct   31
279   75   !=   reduct   32
280   75   +   reduct   32
281   75   -   reduct   32
282   75   ;   reduct   32
283   75   <   reduct   32
284   75   <=   reduct   32
285   75   ==   reduct   32
286   75   >   reduct   32
287   75   >=   reduct   32
288   76   (   shift   100
289   76   ID   shift   99
290   76   num   shift   98
291   77   (   shift   100
292   77   ID   shift   99
293   77   num   shift   98
294   78   (   shift   100
295   78   ID   shift   99
296   78   num   shift   98
297   79   (   shift   100
298   79   ID   shift   99
299   79   num   shift   98
300   80   (   shift   100
301   80   ID   shift   99
302   80   num   shift   98
303   81   (   shift   100
304   81   ID   shift   99
305   81   num   shift   98
306   82   (   shift   56
307   82   ID   shift   55
308   82   num   shift   54
309   83   (   shift   56
310   83   ID   shift   55
311   83   num   shift   54
312   84   (   shift   56
313   84   ID   shift   55
314   84   num   shift   54
315   85   (   shift   56
316   85   ID   shift   55
317   85   num   shift   54
318   86   )   shift   110
319   87   !=   reduct   35
320   87   *   reduct   35
321   87   +   reduct   35
322   87   -   reduct   35
323   87   /   reduct   35
324   87   ;   reduct   35
325   87   <   reduct   35
326   87   <=   reduct   35
327   87   ==   reduct   35
328   87   >   reduct   35
329   87   >=   reduct   35
330   88   {   shift   111
331   89   {   shift   113
332   90   (   shift   66
333   90   ID   shift   65
334   90   num   shift   64
335   91   (   shift   66
336   91   ID   shift   65
337   91   num   shift   64
338   92   (   shift   66
339   92   ID   shift   65
340   92   num   shift   64
341   93   (   shift   66
342   93   ID   shift   65
343   93   num   shift   64
344   94   )   shift   119
345   95   )   reduct   21
346   96   )   reduct   27
347   96   +   shift   120
348   96   -   shift   121
349   97   )   reduct   30
350   97   *   shift   122
351   97   +   reduct   30
352   97   -   reduct   30
353   97   /   shift   123
354   98   )   reduct   33
355   98   *   reduct   33
356   98   +   reduct   33
357   98   -   reduct   33
358   98   /   reduct   33
359   99   )   reduct   34
360   99   *   reduct   34
361   99   +   reduct   34
362   99   -   reduct   34
363   99   /   reduct   34
364   100   (   shift   56
365   100   ID   shift   55
366   100   num   shift   54
367   101   )   reduct   22
368   102   )   reduct   23
369   103   )   reduct   24
370   104   )   reduct   25
371   105   )   reduct   26
372   106   !=   reduct   28
373   106   )   reduct   28
374   106   <   reduct   28
375   106   <=   reduct   28
376   106   ==   reduct   28
377   106   >   reduct   28
378   106   >=   reduct   28
379   107   !=   reduct   29
380   107   )   reduct   29
381   107   <   reduct   29
382   107   <=   reduct   29
383   107   ==   reduct   29
384   107   >   reduct   29
385   107   >=   reduct   29
386   108   !=   reduct   31
387   108   )   reduct   31
388   108   +   reduct   31
389   108   -   reduct   31
390   108   <   reduct   31
391   108   <=   reduct   31
392   108   ==   reduct   31
393   108   >   reduct   31
394   108   >=   reduct   31
395   109   !=   reduct   32
396   109   )   reduct   32
397   109   +   reduct   32
398   109   -   reduct   32
399   109   <   reduct   32
400   109   <=   reduct   32
401   109   ==   reduct   32
402   109   >   reduct   32
403   109   >=   reduct   32
404   110   !=   reduct   35
405   110   )   reduct   35
406   110   *   reduct   35
407   110   +   reduct   35
408   110   -   reduct   35
409   110   /   reduct   35
410   110   <   reduct   35
411   110   <=   reduct   35
412   110   ==   reduct   35
413   110   >   reduct   35
414   110   >=   reduct   35
415   111   ID   reduct   5
416   111   if   reduct   5
417   111   int   shift   12
418   111   return   reduct   5
419   111   while   reduct   5
420   112   ID   reduct   17
421   112   if   reduct   17
422   112   return   reduct   17
423   112   while   reduct   17
424   112   }   reduct   17
425   113   ID   reduct   5
426   113   if   reduct   5
427   113   int   shift   12
428   113   return   reduct   5
429   113   while   reduct   5
430   114   ID   reduct   18
431   114   else   shift   127
432   114   if   reduct   18
433   114   return   reduct   18
434   114   while   reduct   18
435   114   }   reduct   18
436   115   ;   reduct   28
437   116   ;   reduct   29
438   117   +   reduct   31
439   117   -   reduct   31
440   117   ;   reduct   31
441   118   +   reduct   32
442   118   -   reduct   32
443   118   ;   reduct   32
444   119   *   reduct   35
445   119   +   reduct   35
446   119   -   reduct   35
447   119   /   reduct   35
448   119   ;   reduct   35
449   120   (   shift   100
450   120   ID   shift   99
451   120   num   shift   98
452   121   (   shift   100
453   121   ID   shift   99
454   121   num   shift   98
455   122   (   shift   100
456   122   ID   shift   99
457   122   num   shift   98
458   123   (   shift   100
459   123   ID   shift   99
460   123   num   shift   98
461   124   )   shift   132
462   125   ID   shift   19
463   125   if   shift   22
464   125   return   shift   20
465   125   while   shift   21
466   126   ID   shift   19
467   126   if   shift   22
468   126   return   shift   20
469   126   while   shift   21
470   127   {   shift   111
471   128   )   reduct   28
472   129   )   reduct   29
473   130   )   reduct   31
474   130   +   reduct   31
475   130   -   reduct   31
476   131   )   reduct   32
477   131   +   reduct   32
478   131   -   reduct   32
479   132   )   reduct   35
480   132   *   reduct   35
481   132   +   reduct   35
482   132   -   reduct   35
483   132   /   reduct   35
484   133   }   shift   136
485   134   }   shift   137
486   135   ID   reduct   19
487   135   if   reduct   19
488   135   return   reduct   19
489   135   while   reduct   19
490   135   }   reduct   19
491   136   ID   reduct   4
492   136   if   reduct   4
493   136   return   reduct   4
494   136   while   reduct   4
495   136   }   reduct   4
496   137   ID   reduct   4
497   137   else   reduct   4
498   137   if   reduct   4
499   137   return   reduct   4
500   137   while   reduct   4
501   137   }   reduct   4
